{"ast":null,"code":"var _jsxFileName = \"/Users/sk_sarujan/Desktop/Sharujan_Personal_Project/React/React Beginner/React-Beginner---Todo-List-/google-keep-clone-app/src/component/CreateArea/index.js\",\n  _s = $RefreshSig$();\nimport { Fab, Zoom } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateAreaField = () => {\n  _s();\n  const [isExpanded, setIsExpanded] = useState('');\n\n  // Add Note or store the note\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const expand = () => {\n    setIsExpanded(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [isExpanded && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: note.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onClick: () => expand(),\n        name: \"content\",\n        placeholder: \"Take Your Notes...\",\n        value: note.content,\n        rows: isExpanded ? 3 : 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Zoom, {\n        in: isExpanded,\n        children: /*#__PURE__*/_jsxDEV(Fab, {\n          children: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateAreaField, \"ftt0JlmIBV06XdHvv88X54XkFls=\");\n_c = CreateAreaField;\nexport default CreateAreaField;\nvar _c;\n$RefreshReg$(_c, \"CreateAreaField\");","map":{"version":3,"names":["Fab","Zoom","Add","React","useState","jsxDEV","_jsxDEV","CreateAreaField","_s","isExpanded","setIsExpanded","note","setNote","title","content","expand","children","type","name","placeholder","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","rows","in","_c","$RefreshReg$"],"sources":["/Users/sk_sarujan/Desktop/Sharujan_Personal_Project/React/React Beginner/React-Beginner---Todo-List-/google-keep-clone-app/src/component/CreateArea/index.js"],"sourcesContent":["import { Fab, Zoom } from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\nimport React, { useState } from 'react'\n\nconst CreateAreaField = () => {\n    const [isExpanded, setIsExpanded] = useState('')\n\n    // Add Note or store the note\n    const [note, setNote] = useState({\n        title: \"\",\n        content: \"\"\n    })\n\n    const expand = () => {\n        setIsExpanded(true)\n    }\n\n  return (\n    <div>\n      <form>\n        {/* Title Input Field */}\n        {isExpanded && \n          <input \n            type = \"text\" \n            name = \"title\" \n            placeholder = \"Title\" \n            value = {note.title}\n          />\n        }\n\n        {/* Content Input Field */}\n        <textarea \n          onClick = {() => expand()}\n          name = \"content\" \n          placeholder = \"Take Your Notes...\" \n          value = {note.content}\n          rows = {isExpanded ? 3 : 1 }\n        />\n        \n        {/* Add Button Icon Use */}\n        <Zoom in = {isExpanded}>\n            <Fab>\n                <Add/>\n            </Fab>\n        </Zoom>\n        \n      </form>\n    </div>\n  )\n}\n\nexport default CreateAreaField\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,IAAI,QAAQ,mBAAmB;AAC7C,SAASC,GAAG,QAAQ,oBAAoB;AACxC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAC7BS,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjBL,aAAa,CAAC,IAAI,CAAC;EACvB,CAAC;EAEH,oBACEJ,OAAA;IAAAU,QAAA,eACEV,OAAA;MAAAU,QAAA,GAEGP,UAAU,iBACTH,OAAA;QACEW,IAAI,EAAG,MAAM;QACbC,IAAI,EAAG,OAAO;QACdC,WAAW,EAAG,OAAO;QACrBC,KAAK,EAAIT,IAAI,CAACE;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eAIJlB,OAAA;QACEmB,OAAO,EAAIA,CAAA,KAAMV,MAAM,CAAC,CAAE;QAC1BG,IAAI,EAAG,SAAS;QAChBC,WAAW,EAAG,oBAAoB;QAClCC,KAAK,EAAIT,IAAI,CAACG,OAAQ;QACtBY,IAAI,EAAIjB,UAAU,GAAG,CAAC,GAAG;MAAG;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eAGFlB,OAAA,CAACL,IAAI;QAAC0B,EAAE,EAAIlB,UAAW;QAAAO,QAAA,eACnBV,OAAA,CAACN,GAAG;UAAAgB,QAAA,eACAV,OAAA,CAACJ,GAAG;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAAhB,EAAA,CA7CKD,eAAe;AAAAqB,EAAA,GAAfrB,eAAe;AA+CrB,eAAeA,eAAe;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}